name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker images
        uses: docker/bake-action@v3
        with:
          pull: true
          load: true
          files: |
            docker-compose.yml
            docker-compose.override.yml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      - name: Start services
        run: docker compose up --wait --no-build
      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      - name: Check HTTPS reachability
        run: curl -vk -o /dev/null https://localhost
      - name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      - name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: Load Fixtures
        run: docker compose exec -T php bin/console -e test hautelook:fixtures:load --no-interaction
      - name: Install dependencies
        run: yarn && yarn dev-server --host=0.0.0.0
      - name: Run PHPUnit
        run: docker compose exec -T php bin/phpunit
      - name: Doctrine Schema Validator
        if: false
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
        
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0

  php-cs-fixer:
    name: Php-cs-fixer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --config=.php-cs-fixer.dist.php --diff --dry-run
  
  phpstan:
    name: Php-stan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: php-actions/composer@v6 # or alternative dependency management
      - uses: php-actions/phpstan@v3
        with:
          path: src/
